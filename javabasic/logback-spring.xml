<?xml version="1.0" encoding="UTF-8"?>
<!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!--设置上下文名称,每个logger都关联到logger上下文，默认上下文名称为default-->
    <contextName></contextName>
    <!-- 文件输出格式 -->
    <property name="PATTERN" value="%d[%t][%X{logId}] %-5level %logger{36}.%method:%L - %msg%n"/>
    <property name="CONSOLE-PATTERN"
              value="%red(%d) %green([%thread][%X{logId}]) %highlight(%-5level) %cyan(%logger{36}.%method:%L) - %highlight(%msg%n)"/>
    <!-- dev文件路径 -->
    <property name="DEV_FILE_PATH" value="/logs/traffic"/>


    <!-- 本地开发环境 -->
    <springProfile name="local">
        <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>${CONSOLE-PATTERN}</pattern>
            </encoder>
        </appender>

        <logger name="com.mapper" level="trace"/>

        <root level="info">
            <appender-ref ref="CONSOLE"/>
        </root>
    </springProfile>

    <!-- dev开发环境 -->
    <springProfile name="dev">
        <!-- 默认的控制台日志输出，一般生产环境都是后台启动，这个没太大作用 -->
        <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>${CONSOLE-PATTERN}</pattern>
            </encoder>
        </appender>
        <!--按天生成输出日志-->
        <appender name="INFO-ROLLING-FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${DEV_FILE_PATH}/info.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${DEV_FILE_PATH}/info.%d{yyyyMMdd}.log</fileNamePattern>
                <maxHistory>30</maxHistory>
            </rollingPolicy>
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>INFO</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
            <encoder>
                <pattern>${PATTERN}</pattern>
            </encoder>
        </appender>
        <appender name="ERROR-ROLLING-FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${DEV_FILE_PATH}/error.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${DEV_FILE_PATH}/error.%d{yyyyMMdd}.log</fileNamePattern>
                <maxHistory>30</maxHistory>
            </rollingPolicy>
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>ERROR</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
            <encoder>
                <pattern>${PATTERN}</pattern>
            </encoder>
        </appender>

        <!--logger用来设置某一个包或具体的某一个类的日志打印级别-->
        <logger name="traffic" level="info">
            <appender-ref ref="INFO-ROLLING-FILE"/>
            <appender-ref ref="ERROR-ROLLING-FILE"/>
        </logger>

        <!--记录druid-sql的记录-->
        <logger name="com.mapper" level="trace" additivity="false">
            <appender-ref ref="CONSOLE"/>
        </logger>

        <!--根级别-->
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
        </root>
    </springProfile>


</configuration>
